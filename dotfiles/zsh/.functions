# Google search function
encode() { echo -n $@ | perl -pe's/([^-_.~A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg'; }
gs() { open "http://www.google.com/search?hl=en#q="`encode $@`"" ;}

# Fasta functions
fastacount () { grep -o '>' "$@" | wc -l; }
fastqencoding () { head -n 40 "$@" | awk '{if(NR%4==0) printf("%s",$0);}' |  od -A n -t u1 | awk 'BEGIN{min=100;max=0;}{for(i=1;i<=NF;i++) {if($i>max) max=$i; if($i<min) min=$i;}}END{if(max<=74 && min<59) print "Phred+33"; else if(max>73 && min>=64) print "Phred+64"; else if(min>=59 && min<64 && max>73) print "Solexa+64"; else print "Unknown score encoding\!";}' }

# Copy Screenshot to local file
getss() { ls -Art ~/Desktop/Screenshots/Screen*.png  | tail -n 1 | xargs -I{} cp "{}" $1.png }

# Append last command to local README
save() { fc -ln -1 >> README.md }

# Mount server drive
mount_deepcat1() { sshfs pbongaerts@deepcat1:/home/pbongaerts/ ~/mounts/deepcat1 }

# Copy 'pwd' to clipboard (mac only)
pc() { pwd | pbcopy }

# Short-list of folder contents
sl() { ls -lha "$@" | head; }

if [ $USERNAME = "deepcat" ] || [ $USERNAME = "pbongaerts" ]; then
    modelreport() {
        cd ~/coralscape20k/scripts/
        ./model_report.py > ~/coralscape20k/report/README.md
        git --git-dir=/home/deepcat/coralscape20k/.git/ --work-tree=/home/deepcat/coralscape20k/ commit -am 'Automatic report update'
        git push
    }
    create_batch_job() {
        cd ~/coralscape20k/current_batch_jobs/
        ~/coralscape20k/scripts/create_batch_files.py ~/coralscape20k/report/README.md
        git --git-dir=/home/deepcat/coralscape20k/.git/ --work-tree=/home/deepcat/coralscape20k/ commit -am 'Create batch job scripts'
        git push
    }
fi

# Go to model folder
goto() { cd "$(python3 ~/workflow/scripts/get_model_folder.py "$1")" }

resetplot() {
	if [[ "$(pwd)" == /home/coral3d/focal_plots* ]]; then
    		rm *.ply
		rm *.log
		rm *.xml
		rm *.json
		rm *.psx	
		rm *.csv
		rm -rf *.files/
		rm -rf *.vis/
	else
    		echo "You are not in the /home/coral3d/focal_plots directory."
	fi
}
